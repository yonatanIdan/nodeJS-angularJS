{"version":3,"sources":["./src/app/usres/usres.component.html","./src/app/usres/usres.component.ts","canvas (ignored)","fs (ignored)","zlib (ignored)","./src/app/user/user.component.ts","./src/app/user/user.component.html","http (ignored)","https (ignored)","./src/app/services/socket.service.ts","url (ignored)","./src/environments/environment.ts","./src/app/services/server-api.service.ts","./src/app/sidenav/sidenav.component.ts","./src/app/sidenav/sidenav.component.html","./src/app/auth/auth.guard.ts","./src/app/chet/chet.component.ts","./src/app/chet/chet.component.html","./src/app/chet/dialog-data-dialog.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/message/message.component.html","./src/app/message/message.component.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/file/file.component.html","./src/app/file/file.component.ts","./src/app/auth/isloggedin.service.ts","./src/app/services/user.service.ts","./src/app/services/message.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/main.component.html","./src/app/main/main.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<!-- <h2>users list:</h2>\r\n<div class=\"usersList\">\r\n  <div class=\"user\">\r\n    <table>\r\n      <th>User Name</th>\r\n      <th>E-mail</th>\r\n      <th>Password</th>\r\n      <th>Phone</th>\r\n      <th>Role</th>\r\n      <tr *ngFor=\"let user of users\" (click)=\"updateUser(user)\">\r\n        <td>\r\n          {{ user.name }}\r\n          {{ user.lname }}\r\n        </td>\r\n        <td>\r\n          {{ user.email }}\r\n        </td>\r\n        <td>\r\n          {{ user.password }}\r\n        </td>\r\n        <td>\r\n          {{ user.phone }}\r\n        </td>\r\n        <td>\r\n          {{ user.role }}\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</div> -->\r\n\r\n<table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\">\r\n\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef>Full Name</th>\r\n    <td mat-cell *matCellDef=\"let element\" (click)=\"updateUser(element)\" class=\"tableTd\">\r\n      {{ element.name }} {{ element.lname }}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"email\">\r\n    <th mat-header-cell *matHeaderCellDef>E-mail</th>\r\n    <td mat-cell *matCellDef=\"let element\" (click)=\"updateUser(element)\" class=\"tableTd\">\r\n      {{ element.email }}\r\n    </td>\r\n  </ng-container>\r\n  \r\n  <!-- <ng-container matColumnDef=\"password\">\r\n    <th mat-header-cell *matHeaderCellDef>Password</th>\r\n    <td mat-cell *matCellDef=\"let element\" (click)=\"updateUser(element)\" class=\"tableTd\">\r\n      {{ element.password }}\r\n    </td>\r\n  </ng-container> -->\r\n\r\n  <ng-container matColumnDef=\"phone\">\r\n    <th mat-header-cell *matHeaderCellDef>Phone</th>\r\n    <td mat-cell *matCellDef=\"let element\" (click)=\"updateUser(element)\" class=\"tableTd\">\r\n      {{ element.phone }}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"role\">\r\n    <th mat-header-cell *matHeaderCellDef>Role</th>\r\n    <td mat-cell *matCellDef=\"let element\" (click)=\"updateUser(element)\" class=\"tableTd\">\r\n      {{ element.role }}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../app.component';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-usres',\n  templateUrl: './usres.component.html',\n  styleUrls: ['./usres.component.css']\n})\n\nexport class UsresComponent implements OnInit {\n  users: User[]= [];\n\n  displayedColumns: string[] = ['name', 'email', 'phone', 'role'];\n\n  constructor(\n    private userservice: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.userservice.refershUsers\n    .subscribe(()=>{\n      this.users = this.userservice.users;\n    })\n  }\n\n  updateUser(usr){\n    console.log('usr', usr);\n    this.userservice.setUser2Update(usr);\n  }\n\n}\n\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n// import { DomSanitizer } from '@angular/platform-browser';\nimport { User } from '../app.component';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n})\nexport class UserComponent implements OnInit {\n  userForm: any;\n\n  admin:boolean = false;\n  user:any = {}\n\n  update:boolean = false;\n\n  roles: any = [\n    {value: 'student', viewValue: 'Student'},\n    {value: 'teacher', viewValue: 'Teacher'},\n    {value: 'admin', viewValue: 'Admin'}\n  ];\n\n  constructor(\n    private userservice: UserService,\n    // private sanitizer: DomSanitizer,\n    ) {\n      this.userForm = new FormGroup({\n        name: new FormControl('',[Validators.pattern(\"[\\- a-zA-Zא-ת\\s]+$\"),Validators.required]),\n        lname: new FormControl(''),\n        role: new FormControl('student'),\n        phone: new FormControl('',Validators.pattern(\"[0-9]{9,10}\")),\n        email: new FormControl('',Validators.email),\n        password: new FormControl('',Validators.required),\n        photo: new FormControl(''),\n        // company: new FormControl(''),\n        // department: new FormControl(''),\n      });\n    }\n\n  ngOnInit(): void {\n    this.userservice.user2Update.subscribe((user: User)=>{\n      this.userForm.controls.name.setValue(user.name);\n      this.userForm.controls.lname.setValue(user.lname);\n      this.userForm.controls.role.setValue(user.role);\n      this.userForm.controls.phone.setValue(user.phone);\n      this.userForm.controls.email.setValue(user.email);\n      this.userForm.controls.password.setValue('*******');\n      this.update = true;\n    })\n\n    this.user = this.userservice.user;\n    console.log('role for update btn:', this.user.user.role);\n    if(this.user.user.role === 'admin') this.admin = true;\n  }\n  \n  fileData: File = null;\n  previewUrl: any = null;\n  source: string;\n  iamgeShow: boolean;\n  \n  fileProgress(fileInput: any) {\n    this.fileData = <File>fileInput.target.files[0];\n    console.log('fileData:',this.fileData);\n    if (this.fileData) {\n      var reader = new FileReader();\n      reader.readAsDataURL(this.fileData);\n      reader.onload = () => {\n        this.previewUrl = reader.result;\n        // console.log('this.previewUrl', this.previewUrl);\n      }\n      console.log(this.fileData.name)\n      this.userForm.controls['photo'].setValue(\n        this.fileData.name, \n      )\n    }\n  }\n\n  deleteData() {\n    this.userForm.reset();\n    this.userForm.controls.role.setValue('student');\n    this.update= false;\n  }\n\n  callUser(): void {\n    console.log('send user:', this.userForm.value);\n    if (this.fileData) this.userservice.uploadPic(this.fileData, this.previewUrl);\n    this.userservice.newUser(this.userForm.value, (error, result) => {\n      if (error) console.log('status error:', error);\n      else {\n        console.log('status result:', result);\n        this.deleteData();\n      } \n    });\n  }\n\n  updateUser(): void {\n    if (this.fileData) this.userservice.uploadPic(this.fileData, this.previewUrl);\n    this.userservice.updateUser(this.userForm.value, (error, result) => {\n      if (error) console.log('status error: you dont have this email -', error);\n      if (result) {\n        console.log('update user to:', this.userForm.value);\n        console.log('status result:', result);\n        this.deleteData();\n      }\n    });\n  }\n\n  deleteUser() {\n    this.userservice.deleteUser(this.userForm.get('email').value, (error, result) => {\n      if (error) console.log('status error:', error);\n      else {\n        console.log('delete user:', this.userForm.get('email').value);\n        console.log('status result:', result);\n        this.deleteData();\n      }\n    });\n  }\n\n  cancel(){\n    this.deleteData();\n  }\n\n}\n","<h2 *ngIf=\"!update\">New User:</h2>\n<h2 *ngIf=\"update\">Update User:</h2>\n<form class=\"form\" [formGroup]=\"userForm\">\n    <table>\n        <tr>\n            <td>\n                <mat-form-field class=\"full-width\">\n                  <mat-label>Name</mat-label>\n                  <input type=\"text\" matInput formControlName=\"name\">\n                  <mat-error *ngIf=\"userForm.controls['name'].invalid && userForm.controls['name'].touched\">\n                    Please enter a name \n                    Name is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n            </td>\n            <td>\n                <mat-form-field class=\"full-width\">\n                <mat-label>Last Name</mat-label>\n                <input type=\"text\" matInput formControlName=\"lname\">\n                <mat-error *ngIf=\"userForm.controls['lname'].invalid\">\n                    Please enter a last name \n                    Last Name is <strong>required</strong>\n                </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Role</mat-label>\n                    <mat-select name=\"role\" formControlName=\"role\">\n                    <mat-option *ngFor=\"let role of roles\" [value]=\"role.value\">\n                        {{role.viewValue}}\n                    </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field class=\"full-width\">\n                    <mat-label>phone</mat-label>\n                    <input type=\"text\" minLength=\"9\" maxLength=\"10\" matInput formControlName=\"phone\">\n                    <mat-error *ngIf=\"userForm.controls['lname'].invalid\">\n                    Please enter a phone with 9-10 digits.\n                    phone is <strong>required</strong>\n                    </mat-error>\n                </mat-form-field>\n            </td>\n            <td>    \n                <mat-form-field class=\"full-width\">\n                <mat-label>Email</mat-label>\n                <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\">\n                <mat-error *ngIf=\"userForm.controls['email'].invalid\">\n                    Please enter a valid email address\n                    Email is <strong>required</strong>\n                </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field class=\"full-width\">\n                <mat-label>Password</mat-label>\n                <input type=\"text\" minLength=\"5\" matInput formControlName=\"password\">\n                <mat-error *ngIf=\"userForm.controls['password'].invalid && userForm.controls['password'].touched\">\n                    Please enter a password \n                    Password is <strong>required</strong>\n                </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-card>\n                    <input accept=\"image/*\" type=\"file\"  (change)=\"fileProgress($event)\" name=\"fileName\" />\n                    <!-- <input accept=\"image/*\" type=\"file\" formControlName=\"photo\" (change)=\"fileProgress($event)\" [(ngModel)]=\"fileName\" name=\"fileName\" /> -->\n                    <mat-label mat-button *ngIf=\"source\" (mouseover)=\"iamgeShow=true\" (mouseout)=\"iamgeShow=false\">Show Image</mat-label>\n                    <div>\n                        <img *ngIf=\"source && iamgeShow\" [src]=\"previewUrl\" style=\"width: 150px; display: block;\">\n                    </div>\n                </mat-card>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <button mat-raised-button color=\"primary\" *ngIf=\"!update\" [disabled]=\"!userForm.valid\" (click)=\"callUser()\">New</button>\n                <button mat-raised-button color=\"primary\" *ngIf=\"update\" [disabled]=\"!userForm.valid\" (click)=\"updateUser()\">Update</button>\n            </td>\n            <td>\n                <button mat-raised-button color=\"warn\" *ngIf=\"update && admin\" [disabled]=\"!userForm.valid\" (click)=\"deleteUser()\">Delete</button>\n                <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n            </td>\n        </tr>\n    </table>\n</form>\n","/* (ignored) */","/* (ignored) */","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { io } from \"socket.io-client\";\nimport { Message } from '../app.component';\n\nclass socketMessage implements Message{\n  message: string;\n  user: string;\n  time: Date;\n  // read: boolean;\n   \n  constructor(message: string, id: string){\n    const answer = JSON.parse(message);\n    console.log('answer', answer, 'id:' ,id );\n    this.message = answer.message;\n    if (id === answer.id) this.user = 'Me';\n    else if (!answer.user) this.user = answer.id;\n    else this.user = answer.user;\n    this.time = new Date();\n    // this.read = answer.read;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\nsocket: any;\nall = [];\n\nconstructor() {\n    this.socket = io(\"http://rtfs0620.xyz:3010\");\n    // this.socket = io(\"http://localhost:3010\");\n    this.socket.on(\"users\",(all)=>{\n      this.all = all;\n    });\n  }\n\n  join(data){\n    this.socket.emit('join', data);\n  }\n\n  allUsers(){\n    return new Observable((observer)=>{\n      observer.next(this.all);\n    });\n  }\n  \n  sendPrivateMessage(partner: string, myName: string, message: string){\n    this.socket.emit(\"private message\", partner, myName, message);\n  }\n  \n  getPrivateMessage() {\n    return new Observable((observer)=>{\n      this.socket.on(\"answer private\",(answ: string)=>{\n        let messPrivate = new socketMessage(answ, this.socket.id);\n        observer.next(messPrivate);\n      });\n    });\n  }\n  \n  sendMessage(message: string, myName:string){\n    this.socket.emit(\"question\", message, myName);\n  }\n\n  getMessage() {\n    return new Observable((observer)=>{\n      this.socket.on(\"answer\",(answ: string)=>{\n        let mess = new socketMessage(answ, this.socket.id);\n        observer.next(mess);\n      });\n    });\n  }\n\n  leave(){\n    this.socket.disconnect();\n  }\n  \n}\n","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { IsloggedinService } from '../auth/isloggedin.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServerAPIService {\n\n  constructor(\n    private http: HttpClient,\n    private loginservice: IsloggedinService,\n  ) {}\n\n  URL: string = 'http://rtfs0620.xyz:3010/';\n  // URL: string = 'http://localhost:3010/';\n\n  messageUser(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({ \n        'Content-Type': 'application/json',\n        'Authorization': this.loginservice.getToken()\n      }),\n    };\n    return this.http.post(\n      (this.URL + 'chats/messageUser'),\n      data,\n      httpOptions\n    );\n  }\n\n  allMessages() {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': this.loginservice.getToken() }),\n    };\n    return this.http.get((this.URL + 'chats/messages'), httpOptions);\n  }\n  \n  privateMessages(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({ \n        'Content-Type': 'application/json',\n        'Authorization': this.loginservice.getToken()\n      }),\n    };\n    return this.http.post(\n      (this.URL + 'chats/privateMessages'),\n      data,\n      httpOptions\n    );\n  }\n\n  messageUpdate(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({ \n        'Content-Type': 'application/json',\n        'Authorization': this.loginservice.getToken()\n      }),\n    };\n    return this.http.post(\n      (this.URL + 'chats/messageUpdate'),\n      data,\n      httpOptions\n    );\n  }\n\n  messageDelete(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({ \n        'Content-Type': 'application/json',\n        'Authorization': this.loginservice.getToken()\n      }),\n    };\n    return this.http.post(\n      (this.URL + 'chats/messageDelete'),\n      data,\n      httpOptions\n    );\n  }\n  \n  newUser(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({ \n        'Content-Type': 'application/json',\n        'Authorization': this.loginservice.getToken()\n      }),\n    };\n    return this.http.post(\n      (this.URL + 'users/newuser'),\n      data,\n      httpOptions\n    );\n  }\n\n  updateUser(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({ \n        'Content-Type': 'application/json',\n        'Authorization': this.loginservice.getToken()\n      }),\n    };\n    return this.http.post(\n      (this.URL + 'users/updateuser'),\n      data,\n      httpOptions\n    );\n  }\n\n  deleteuser(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({ \n        'Content-Type': 'application/json',\n        'Authorization': this.loginservice.getToken()\n      }),\n    };\n    return this.http.post(\n      (this.URL + 'users/deleteuser'),\n      data,\n      httpOptions\n    );\n  }\n\n  users() {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': this.loginservice.getToken() }),\n    };\n    return this.http.get((this.URL + 'users/users'), httpOptions);\n  }\n\n  loginUser(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n    };\n    return this.http.post((this.URL + 'login'), data, httpOptions );\n  }\n  \n  writeFileBase64(data: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({ \n        'Content-Type': 'application/json',\n        'Authorization': this.loginservice.getToken()\n      }),\n    };\n    return this.http.post(\n      (this.URL + 'writefilebase64'),\n      data,\n      httpOptions\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container>\n    <mat-toolbar class=\"header\">\n      <img src=\"https://cdn.logo.com/hotlink-ok/logo-social-sq.png\" width=\"60px\" alt=\"Logo\">\n          \n      <button mat-icon-button (click)=\"sidenav.toggle()\" color=\"primary\" aria-label=\"icon button with a menu icon\">\n          <mat-icon>menu</mat-icon>\n      </button>\n\n    </mat-toolbar>\n  \n    <mat-sidenav-container class=\"container\">\n      <mat-sidenav #sidenav mode=\"side\" opened class=\"sidenav\">\n\n        <app-navbar></app-navbar>\n\n      </mat-sidenav>\n\n      <div class=\"screen\">\n        <router-outlet> </router-outlet>\n      </div>\n\n    </mat-sidenav-container>\n  \n    <mat-toolbar class=\"footer\">© Copyright- all rights reserved</mat-toolbar>\n  </ng-container>\n  ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IsloggedinService } from './isloggedin.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private isloggedinService:IsloggedinService\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      let isAuth = this.isloggedinService.getLogin();\n      console.log('Guard:', isAuth);\n      if (isAuth === true) {\n        return true\n      } else {\n        this.router.navigate(['/'], {\n          queryParams: {\n            auth: false\n          }\n        })\n        return false\n      }\n  }\n\n}\n","import { Component, ElementRef, Inject, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Message } from '../app.component';\nimport { MessageService } from '../services/message.service';\nimport { SocketService } from '../services/socket.service';\nimport { UserService } from '../services/user.service';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chet',\n  templateUrl: './chet.component.html',\n  styleUrls: ['./chet.component.css']\n})\nexport class ChetComponent implements OnInit {\n  @ViewChild('scrollframe', {static: false}) scrollFrame: ElementRef;\n  @ViewChildren('item') itemElements: QueryList<any>;\n  private scrollContainer: any;\n  private isNearBottom = true;\n\n  out_message: string = '';\n  messages: Message[] = [];\n  user: any = this.userservice.user;\n  myName: string = this.user.user.name;\n  users = [];\n  usersOffline = [];\n\n  constructor(\n    private router: Router,\n    private socketService: SocketService,\n    private userservice: UserService,\n    private _snackBar: MatSnackBar,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n  ) { }\n\n  ngAfterViewInit() {\n    this.scrollContainer = this.scrollFrame.nativeElement;\n    this.itemElements.changes.subscribe(_ => this.onItemElementsChanged());  \n  }\n\n  ngOnInit(): void {\n    this.reloadUsers();\n    setInterval(() => {\n      this.reloadUsers();\n    }, 20000);\n\n    this.messageService.allMessages(() => {})\n    this.messageService.refershMessages.subscribe(()=>{\n      for (let i = 0; i < this.messageService.Messages.length; i++) {\n        let user;\n        if(this.messageService.Messages[i].fromUserName == this.myName){\n          user = 'Me'\n        } else user = this.messageService.Messages[i].fromUserName\n        let message = {\n          message: this.messageService.Messages[i].Message,\n          user : user,\n          time: this.messageService.Messages[i].date,\n          read: this.messageService.Messages[i].read,\n        }\n        this.messages.push(message);       \n      }\n    });\n\n    this.socketService.getMessage().subscribe((Message: Message | any)=>{\n      if(Message.user != 'Me'){\n        let messageSnackBar = Message.user + \": \" + Message.message;\n        this.openSnackBar(messageSnackBar, 'bottom')\n      }\n      this.messages.push(Message);\n      console.log('public messages', this.messages);\n    });\n\n  }\n\n  updateMessage(partner){\n    console.log('partner for update', partner.email);\n    this.messageService.updateMessages({fromUser: partner.email, toUser: this.user.user.email}, (error, result) => {\n      if (error) console.log('status error:', error);\n      else console.log('status result:', result); \n    });\n  }\n\n  reloadUsers(){\n    this.socketService.allUsers().subscribe(()=>{\n      this.users = this.socketService.all;\n      this.userservice.allUsers(()=>{})\n      this.userservice.refershUsers.subscribe(()=>{\n        this.usersOffline = this.userservice.users;\n        for (let i = 0; i < this.users.length; i++) {\n          if(this.users[i].email == this.user.user.email){\n            this.users.splice(i, 1);\n          }\n        }\n        for (let j = 0; j < this.usersOffline.length; j++) {\n          if(this.usersOffline[j].email == this.user.user.email){\n              this.usersOffline.splice(j, 1);\n            }\n            for (let i = 0; i < this.users.length; i++) {\n              if(this.users[i].email == this.usersOffline[j].email){\n                this.usersOffline.splice(j, 1);\n              }\n            }\n        }\n      })\n    });\n  }\n  \n  private onItemElementsChanged(): void {\n    if (this.isNearBottom) {\n      this.scrollToBottom();\n    }\n  }\n\n  private scrollToBottom(): void {\n    this.scrollContainer.scroll({\n      top: this.scrollContainer.scrollHeight,\n      left: 0,\n      // behavior: 'smooth'\n    });\n  }\n\n  private isUserNearBottom(): boolean {\n    const threshold = 150;\n    const position = this.scrollContainer.scrollTop + this.scrollContainer.offsetHeight;\n    const height = this.scrollContainer.scrollHeight;\n    return position > height - threshold;\n  }\n\n  scrolled(event: any): void {\n    this.isNearBottom = this.isUserNearBottom();\n  }\n\n  sendMessage(): void {\n    if (this.out_message != ''){\n      this.socketService.sendMessage(this.out_message, this.myName);\n      this.messageUser('public')\n      this.out_message = '';\n    } else this.openSnackBar('you tried to send empty message', 'top')\n  }\n\n  messageUser(getMessage): void {\n    let saveMessage = {\n      \"message\": this.out_message,\n      \"emailSend\": this.user.user.email, \n      \"nameSend\": this.myName, \n      \"get\": getMessage,\n      \"date\": new Date(),\n      \"read\": true,\n    }\n    this.messageService.newMessage(saveMessage, (error, result) => {\n      if (error) console.log('status error:', error);\n      else console.log('status result:', result); \n    });\n  }\n\n  messageDelete(): void {\n    let emailSend = {\n      \"emailSend\": this.user.user.email, \n    }\n    this.messageService.messageDelete(emailSend, (error, result) => {\n      if (error) console.log('status error:', error);\n      else {\n        console.log('status result:', result); \n        this.router.navigate(['/message']);\n      }\n    });\n  }\n\n  openSnackBar(mess: string, Position) {\n    this._snackBar.open(mess, 'close',{\n      duration: 5000,\n      horizontalPosition: 'end',\n      verticalPosition: Position,\n    });\n  }\n  \n  openDialog(partner) {\n    this.updateMessage(partner);\n    this.dialog.open(DialogDataDialog, {\n      data: {\n        myName: this.myName,\n        user: this.user,\n        partner: partner,\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-data-dialog',\n  templateUrl: 'dialog-data-dialog.html',\n  styleUrls: ['./chet.component.css']\n})\nexport class DialogDataDialog {\n  @ViewChild('scrollframe', {static: false}) scrollFrame: ElementRef;\n  @ViewChildren('item') itemElements: QueryList<any>;\n  private scrollContainer: any;\n  private isNearBottom = true;\n\n  ngAfterViewInit() {\n    this.scrollContainer = this.scrollFrame.nativeElement;\n    this.itemElements.changes.subscribe(_ => this.onItemElementsChanged());  \n  }\n\n  privateMessage: Message[]= [];\n  out_message: string = '';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) \n    public data: any,\n    private messageService: MessageService,\n    private socketService: SocketService,\n    private _snackBar: MatSnackBar,\n    ) {}\n    \n    ngOnInit(): void {\n    this.reloadMessages();\n    \n    this.socketService.getPrivateMessage().subscribe((Message: Message)=>{\n      if(Message.user != 'Me'){\n        let messageSnackBar = Message.user + \": \" + Message.message;\n        this.openSnackBar(messageSnackBar, 'bottom')\n      }\n      this.privateMessage.push(Message);\n      console.log('try again:', Message, this.privateMessage)\n    });\n\n    console.log(this.socketService.all)\n  }\n\n  reloadMessages(){\n    let data = {\n      toUser: this.data.partner.email,\n      fromUser: this.data.user.user.email\n    }\n    this.messageService.privateMessage(data, (error, result) => {\n      if (error) console.log('status error:', error);\n      else console.log('status result for praivate massages:', result); \n    });\n    this.messageService.refershPrivateMessages.subscribe(()=>{\n      let PrivateMessages = [];\n      for (let i = 0; i < this.messageService.PrivateMessages.length; i++) {\n        let user;\n        if(this.messageService.PrivateMessages[i].fromUserName == this.data.myName){\n          user = 'Me'\n        } else user = this.messageService.PrivateMessages[i].fromUserName\n        let message = {\n          message: this.messageService.PrivateMessages[i].Message,\n        user : user,\n        time: this.messageService.PrivateMessages[i].date,\n        read: this.messageService.PrivateMessages[i].read,\n      }\n      PrivateMessages.push(message);       \n    }\n    this.privateMessage = PrivateMessages;\n    });\n  }\n\n  private onItemElementsChanged(): void {\n    if (this.isNearBottom) {\n      this.scrollToBottom();\n    }\n  }\n\n  private scrollToBottom(): void {\n    this.scrollContainer.scroll({\n      top: this.scrollContainer.scrollHeight,\n      left: 0,\n    });\n  }\n\n  private isUserNearBottom(): boolean {\n    const threshold = 150;\n    const position = this.scrollContainer.scrollTop + this.scrollContainer.offsetHeight;\n    const height = this.scrollContainer.scrollHeight;\n    return position > height - threshold;\n  }\n\n  scrolled(event: any): void {\n    this.isNearBottom = this.isUserNearBottom();\n  }\n  \n  messageUser(getMessage, partner): void {\n    let read = false;\n    for (let i = 0; i < this.socketService.all.length; i++) {\n      console.log(\"dd\",this.socketService.all[i] , partner)\n      if(this.socketService.all[i].id === partner.id) {\n        read = true\n      }; \n    }\n    let saveMessage = {\n      \"message\": this.out_message,\n      \"emailSend\": this.data.user.user.email, \n      \"nameSend\": this.data.myName, \n      \"get\": getMessage,\n      \"date\": new Date(),\n      \"read\": read,\n    }\n    console.log(\"message\", saveMessage);\n    this.messageService.newMessage(saveMessage, (error, result) => {\n      if (error) console.log('status error:', error);\n      else console.log('status result:', result);\n    });\n  }\n\n  sendPrivateMessage(partner): void {\n    if (this.out_message != '' && this.out_message != '\\n'){\n      this.socketService.sendPrivateMessage(partner, this.data.myName , this.out_message);\n      this.messageUser(partner.email, partner)\n      let data = {\n        toUser: partner.email,\n        fromUser: this.data.user.user.email\n      }\n      this.messageService.privateMessage(data, (error, result) => {\n        if (error) console.log('status error:', error);\n        else console.log('status result for praivate massages:', result); \n      });\n      this.out_message = '';\n    } else {\n      this.openSnackBar('you tried to send empty message', 'top');\n      this.out_message = '';\n    }\n  }\n\n  openSnackBar(mess: string, Position) {\n    this._snackBar.open(mess, 'close',{\n      duration: 5000,\n      horizontalPosition: 'end',\n      verticalPosition: Position,\n    });\n  }\n}\n","<div class=\"flex_container\">\n  <mat-card class=\"card\">\n    <mat-card-header>\n      <mat-card-title>\n        <h1>Messages</h1>\n        <button><mat-icon class='delete' (click)='messageDelete()'>delete</mat-icon></button>\n      </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <h3>Messages:</h3>\n      <div class=\"messageBlock\" (scroll)=\"scrolled($event)\" #scrollframe>\n        <div class=\"allMessages\" *ngFor=\"let mes of messages\" #item>\n          <div>{{ mes.user }}:</div>\n          <mat-icon class=\"checkIcon\" *ngIf=\"mes.user =='Me'\" style=\"color:green\">done_all</mat-icon>\n          <div class=\"message\">{{ mes.message }}</div>\n          <div class=\"date\">{{ mes.time | date: \"dd-MM-yy hh:mm:ss\" }}</div>\n        </div>\n      </div>\n      <br>\n      <h2>Send New Message</h2>\n      <textarea matInput class=\"inputMessage\" type=\"text\" (keydown.enter)='sendMessage()' [(ngModel)]=\"out_message\" ></textarea>\n      <button mat-button style=\"float: right\" (click)=\"sendMessage()\">Send Message <mat-icon>send</mat-icon></button>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card class=\"card2\">\n    <mat-card-header>\n      <mat-card-title>\n        <h2>Private Messages\n          <button mat-button (click)=\"reloadUsers()\">\n            <mat-icon>autorenew</mat-icon>\n          </button>\n        </h2>\n      </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <h3 *ngIf='users.length > 0'>Private online Messages</h3>\n      <mat-nav-list class=\"listUsers\">\n        <button mat-list-item *ngFor=\"let user of users\" (click)=\"openDialog(user)\" >\n          <strong>{{ user.name }}</strong>\n          <mat-icon class='online'>how_to_reg</mat-icon>\n        </button>\n      </mat-nav-list>\n      <mat-card-title>\n        <h3 *ngIf='usersOffline.length > 0'>Private offline Messages</h3>\n      </mat-card-title>\n      <mat-nav-list  class=\"listUsers\">\n        <button mat-list-item *ngFor=\"let user of usersOffline\" (click)=\"openDialog(user)\" >\n          <strong>{{ user.name }}</strong>\n          <mat-icon class='offline'>nightlight_round</mat-icon>\n        </button>\n      </mat-nav-list>\n    </mat-card-content>\n  </mat-card>\n</div>\n  ","<h1 mat-dialog-title>Messages with <b>{{ data.partner.name }}</b></h1>\r\n<button mat-button (click)=\"reloadMessages()\">\r\n  <mat-icon>autorenew</mat-icon>\r\n</button>\r\n<div mat-dialog-content>\r\n  <div class=\"flex_container\">\r\n    <mat-card class=\"card\">\r\n      <mat-card-content>\r\n        <div class=\"messageBlock\" (scroll)=\"scrolled($event)\" #scrollframe>\r\n          <div class=\"allMessages\" *ngFor=\"let mes of privateMessage\"  #item>\r\n            <div>{{ mes.user }}:</div>\r\n            <mat-icon class=\"checkIcon\" *ngIf=\"mes.user =='Me' && mes.read == true\" style=\"color: green\">done_all</mat-icon>\r\n            <mat-icon class=\"checkIcon\" *ngIf=\"mes.user =='Me' && mes.read == false\" style=\"color: blue\">done</mat-icon>\r\n            <div class=\"message\">{{ mes.message }}</div>\r\n            <div class=\"date\">{{ mes.time | date: \"dd-MM-yy hh:mm:ss\" }}</div>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <h2>Send New Message</h2>\r\n        <textarea matInput class=\"inputMessage\" type=\"text\" (keydown.enter)='sendPrivateMessage(data.partner)' [(ngModel)]=\"out_message\"></textarea>\r\n        <button mat-button style=\"float: right\" (click)=\"sendPrivateMessage(data.partner)\">Send Message <mat-icon>send</mat-icon></button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'http';\n}\nexport interface User {\n  name: string;\n  lname: string;\n  role: string;\n  phone: string;\n  email: string;\n  password: string;\n  company: string;\n  department: string;\n}\n\nexport interface Message {\n  message:string;\n  user:string;\n  time: Date;\n  // read: boolean;\n}","<!-- <app-navbar></app-navbar> -->\r\n<app-sidenav></app-sidenav>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { UserComponent } from './user/user.component';\nimport { UsresComponent } from './usres/usres.component';\nimport { LoginComponent } from './login/login.component';\nimport { MessageComponent } from './message/message.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ChetComponent, DialogDataDialog } from './chet/chet.component';\n\n//Material\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { FileComponent } from './file/file.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    UserComponent,\n    UsresComponent,\n    LoginComponent,\n    MessageComponent,\n    NavbarComponent,\n    SidenavComponent,\n    FileComponent,\n    ChetComponent,\n    DialogDataDialog,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    PdfViewerModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- <div *ngIf=\"user\">\n    Name: {{user.user.name}} {{user.user.lname}} <br>\n    Role: {{user.user.role}}<br>\n    Email: {{user.user.email}}<br>\n    Phone: {{user.user.phone}}\n</div> -->\n<div class=\"flex_container\">\n  <mat-card class=\"card\" *ngIf=\"user\">\n    <mat-card-header>\n      <img mat-card-avatar class=\"header-image\" [src]=\"previewImage\">\n      <mat-card-title\n        >{{ user.user.name }} {{ user.user.lname }}</mat-card-title\n      >\n      <mat-card-subtitle>Email: {{ user.user.email }}</mat-card-subtitle>\n    </mat-card-header>\n    <div class=\"grid\">\n        <!-- <img\n          mat-card-image\n          class=\"png\"\n          src=\"https://www.pavilionweb.com/wp-content/uploads/2017/03/man-300x300.png\"\n        /> -->\n        <!-- <mat-spinner></mat-spinner> -->\n        <img *ngIf=\"previewImage\" [src]=\"previewImage\" style=\"max-width: 300px; max-height: 300px; border-radius: 30px\">\n    </div>\n    <mat-card-content>\n      <p>\n        Role: {{ user.user.role }}<br />\n        Phone: {{ user.user.phone }}\n      </p>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n  user: any;\n  previewImage: string;\n\n  constructor(\n    private userservice: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.userservice.user;\n    console.log('user face:', this.user.user);\n    // if (this.user.user.photo) this.previewImage = \"http://localhost:3010/\" + this.user.user.photo\n    if (this.user.user.photo) this.previewImage = \"http://rtfs0620.xyz:3010/\" + this.user.user.photo\n  }\n\n}\n","<mat-list>\n    <mat-list-item>\n        <button mat-button>About Us</button>\n        <mat-icon>info</mat-icon>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n</mat-list>\n<mat-list *ngIf=\"isLoggedIn\">\n    <mat-list-item (click)=\"routerNavigate('message')\">\n        <button mat-button>My Card</button>\n        <mat-icon>face</mat-icon>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item (click)=\"routerNavigate('chat')\">\n        <button mat-button>Chat</button>\n        <mat-icon>record_voice_over</mat-icon>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item (click)=\"routerNavigate('main')\">\n        <button mat-button>Users</button>\n        <mat-icon>settings_accessibility</mat-icon>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item (click)=\"setLogout()\">\n        <button mat-button>Logout</button>\n        <mat-icon>logout</mat-icon>\n    </mat-list-item>\n</mat-list>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IsloggedinService } from '../auth/isloggedin.service';\nimport { SocketService } from '../services/socket.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styles: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  userName: string = '';\n  isLoggedIn: boolean = false;\n\n  constructor(\n    private router: Router,\n    private isloggedinService: IsloggedinService,\n    private socketService:SocketService,\n    private userservice: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    this.isloggedinService.loginEvent.subscribe((login: any) => {\n      this.isLoggedIn = login;\n    });\n    this.userservice.userFace.subscribe((userF: any) => {\n      this.userName = userF.name;\n      console.log('user face massege page:', this.userName);\n    });\n  }\n\n  routerNavigate(navigate){\n    this.router.navigate(['/'+ navigate + '']);\n  }\n\n  setLogout() {\n    this.isloggedinService.setLogin(false);\n    this.socketService.leave()\n    this.router.navigate(['/']);\n  }\n}\n","<mat-card>\n    <mat-label>Add file</mat-label>\n    <input type=\"file\" id=\"photo\" class=\"file\" (change)=\"fileProgress($event)\" [(ngModel)]=\"fileName\" name=\"fileName\" />\n    <button (click)=\"uploadPic()\">upload picture</button>\n    <div *ngIf='previewUrl'>\n        <img *ngIf=\"isPic()\" [src]=\"previewUrl\" width='150px'>\n        <pdf-viewer *ngIf=\"isPDF()\" [src]=\"previewUrl\" [render-text]=\"true\" style=\"display: block;\"></pdf-viewer>\n    </div>\n    <!-- <img style=\"height: 150px; width: 150px\" [src]=\"transform()\"> -->\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ServerAPIService } from '../services/server-api.service';\n\n@Component({\n  selector: 'app-file',\n  templateUrl: './file.component.html',\n  styleUrls: ['./file.component.css']\n})\nexport class FileComponent implements OnInit {\n\n  constructor(\n    private api: ServerAPIService,\n    private sanitizer: DomSanitizer,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  uploadPic(){\n    console.log('preview Url:', this.previewUrl);\n    const file2Server = {\n      name: this.fileData.name,\n      dirname: '',\n      blob: this.previewUrl,\n    };\n    this.api.writeFileBase64(JSON.stringify(file2Server))\n    .subscribe((res:any)=>{\n      console.log('result', res);\n    }, (error) => {\n      console.log('error', error);\n    });\n  }\n  \n  // base64Image:string = \"\";\n  // transform(){\n  //   this.base64Image = this.previewUrl;\n  //   return this.sanitizer.bypassSecurityTrustResourceUrl(this.base64Image);\n  // }\n\n  fileName: any = null;\n  fileData: File = null;\n  previewUrl: any = null;\n  \n  fileProgress(fileInput: any) {\n    this.fileData = <File>fileInput.target.files[0];\n    console.log('fileData:',this.fileData);\n    if (this.fileData) {\n      var reader = new FileReader();\n      reader.readAsDataURL(this.fileData);\n      reader.onload = () => {\n        this.previewUrl = reader.result;\n      }\n    }\n  }\n  \n  isPic(){\n    if(this.fileData.type === 'image/jpeg' || this.fileData.type === 'image/png') return true;\n    else return false;\n  }\n\n  isPDF(){\n    if(this.fileData.type === 'application/pdf') return true;\n    else return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsloggedinService {\n  token: string = '';\n  loggedIn: boolean = false;\n  loginEvent = new Subject();\n\n  constructor( ) { }\n\n  setLogin(login:boolean) {\n    console.log('SetLogin:', login);\n    this.loggedIn = login;\n    return this.loginEvent.next(login);\n  }\n\n  getLogin() {\n    console.log('getLogin:', this.loggedIn);\n    return this.loggedIn;\n  }\n\n  getToken():string {\n    return this.token;\n  }\n  \n  setToken(token):void {\n    return this.token = token;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../app.component';\nimport { Subject } from 'rxjs';\nimport { ServerAPIService } from './server-api.service';\nimport { IsloggedinService } from '../auth/isloggedin.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  users: User[];\n  user: User[]; //interface\n\n  refershUsers = new Subject();\n  user2Update = new Subject();\n  userFace = new Subject();\n\n  constructor(\n    private api: ServerAPIService,\n    private loginservice: IsloggedinService,\n    ) {}\n\n  newUser(data, callback) {\n    // let dataServer = {\n    //   user: data,\n    // };\n    console.log('data user service', data);\n    this.api.newUser(JSON.stringify(data)).subscribe(\n      (res: any) => {\n        this.allUsers(()=>{callback(null, res);})\n      },\n      (error) => {\n        console.log('error', error);\n        callback(error, null);\n      }\n    );\n  }\n\n  setUser2Update(user2) {\n    this.user2Update.next(user2);\n  }\n\n  updateUser(data, callback) {\n    // let dataServer = {\n    //   user: data,\n    // };\n    this.api.updateUser(JSON.stringify(data)).subscribe(\n      (res: any) => {\n        this.allUsers(()=>{callback(null, res);})\n      },\n      (error) => {\n        console.log('error', error);\n        callback(error, null);\n      }\n    );\n  }\n\n  allUsers(callback) {\n    this.api.users().subscribe(\n      (res: any) => {\n        this.users = res;\n        this.refershUsers.next();\n        callback(null, res);\n      },\n      (error) => {\n        console.log('error', error);\n        callback(error, null);\n      }\n    );\n  }\n\n  deleteUser(data, callback) {\n    let userEmail = {\n      email: data,\n    };\n    console.log('user Email:', userEmail);\n    this.api.deleteuser(JSON.stringify(userEmail)).subscribe(\n      (res: any) => {\n        this.allUsers(()=>{callback(null, res);})\n      },\n      (error) => {\n        console.log('error', error);\n        callback(error, null);\n      }\n    );\n  }\n\n  login(login, callback) {\n    this.api.loginUser(JSON.stringify(login))\n    .subscribe((res:any)=>{\n      console.log('Login Reault', res);\n      this.user = res;\n      this.loginservice.setToken(res.token);\n      this.loginservice.setLogin(true);\n      callback(false, res);\n    }, (error) => {\n      console.log('error', error);\n      callback(error, null);\n    });\n  }\n\n  uploadPic(fileData, previewUrl){\n    // console.log('preview Url:', this.previewUrl);\n    const file2Server = {\n      name: fileData.name,\n      dirname: '',\n      blob: previewUrl,\n    };\n    this.api.writeFileBase64(JSON.stringify(file2Server))\n    .subscribe((res:any)=>{\n      console.log('result', res);\n    }, (error) => {\n      console.log('error', error);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Message } from '../app.component';\nimport { ServerAPIService } from './server-api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  Messages = [];\n  PrivateMessages = [];\n\n  refershMessages = new Subject();\n  refershPrivateMessages = new Subject();\n\n  constructor(private api: ServerAPIService) {}\n\n  newMessage(data, callback) {\n    this.api.messageUser(JSON.stringify(data)).subscribe(\n      (res: any) => {\n        console.log('res newMessage', res);\n        callback(null, res);\n      },\n      (error) => {\n        console.log('error newMessage', error);\n        callback(error, null);\n      }\n    );\n  }\n\n  allMessages(callback) {\n    this.api.allMessages().subscribe(\n      (res: any) => {\n        this.Messages = res;\n        this.refershMessages.next();\n        callback(null, res);\n      },\n      (error) => {\n        console.log('error', error);\n        callback(error, null);\n      }\n    );\n  }\n\n  privateMessage(data, callback) {\n    this.api.privateMessages(JSON.stringify(data)).subscribe(\n      (res: any) => {\n        this.PrivateMessages = res;\n        this.refershPrivateMessages.next();\n        callback(null, res);\n      },\n      (error) => {\n        console.log('error', error);\n        callback(error, null);\n      }\n    );\n  }\n\n  messageDelete(data, callback) {\n    this.api.messageDelete(JSON.stringify(data)).subscribe(\n      (res: any) => {\n        callback(null, res);\n      },\n      (error) => {\n        console.log('error', error);\n        callback(error, null);\n      }\n    );\n  }\n\n  updateMessages(data, callback) {\n    this.api.messageUpdate(JSON.stringify(data)).subscribe(\n      (res: any) => {\n        console.log('res updated messages', res);\n      },\n      (error) => {\n        console.log('error', error);\n        callback(error, null);\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { ChetComponent } from './chet/chet.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainComponent } from './main/main.component';\nimport { MessageComponent } from './message/message.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  {\n    path: 'login',\n    component: LoginComponent ,\n  },\n  {\n    path: 'message',\n    component: MessageComponent ,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'chat',\n    component: ChetComponent ,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'main',\n    component: MainComponent ,\n    canActivate: [AuthGuard],\n  },\n  { path: '**',redirectTo: 'login' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { SocketService } from '../services/socket.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: any;\n  hide = true;\n\n  constructor(\n    private router: Router,\n    private userservice: UserService,\n    private socketService:SocketService,\n    private _snackBar: MatSnackBar\n  ) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  openSnackBar() {\n    this._snackBar.open('login successful! 🔒', 'close',{\n      duration: 3000,\n      horizontalPosition: 'end',\n      verticalPosition: 'top',\n    });\n  }\n\n  login() {\n    let login = {\n      username: this.loginForm.get('email').value,\n      password: this.loginForm.get('password').value\n    }\n    console.log('login User:', login);\n    this.userservice.login(login,(error,result)=>{\n      if (error) {\n        this.loginForm.reset();\n        return console.log('status error:', error);\n      } else {\n        this.openSnackBar();\n        this.join();\n        console.log('result:', result);\n        this.router.navigate(['/message']);\n      }\n    });\n  }\n\n  join(){\n    let user: any = this.userservice.user;\n    let myName: string = user.user.name;\n    this.socketService.join({user:myName, email: this.loginForm.get('email').value});\n  }\n\n}\n","<!-- <form  [formGroup]=\"loginForm\">\n    <h1>Login</h1>\n    <input type=\"email\" placeholder=\"E-mail\" formControlName=\"email\">\n    <br>\n    <input type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n    <br><br>\n    <input type=\"button\" value=\"Login\" (click)=\"login()\">\n</form> -->\n\n<div class=\"flex_container\">\n\n<mat-horizontal-stepper #stepper>\n  <mat-step [stepControl]=\"loginForm\">\n    <form [formGroup]=\"loginForm\">\n      <ng-template matStepLabel>Email</ng-template>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"Please enter your E-mail\" formControlName=\"email\" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Password </ng-template>\n      <form [formGroup]=\"loginForm\">\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\"\n        placeholder=\"Please enter your Password\" required>\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n      </mat-form-field>\n    </form>\n    <div>\n      <mat-slide-toggle color=\"primary\" [disabled]=\"true\">Remember me!</mat-slide-toggle><br><br>\n      <button mat-button (click)=\"login()\">Login</button>\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>\n\n</div>\n","<div class=\"main-content\">\r\n    <div class=\"component\">\r\n        <app-user></app-user>\r\n    </div>\r\n    <div class=\"componentTable\" *ngIf=\"!student\">\r\n        <app-usres></app-usres>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\nstudent = false;\nuser: any = {}\n\n  constructor(\n    private userservice: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    this.userservice.allUsers(() => {})\n    this.user = this.userservice.user;\n    console.log('role:', this.user.user.role);\n    if(this.user.user.role === 'student') this.student = true;\n  }\n    \n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}